{
   "name": "pg_uuid",
   "abstract": "UUID generators for v6/7/8.",
   "description": "Regular random UUIDs are distributed uniformly over the whole range of possible values. This results in poor locality when inserting data into indexes - all index leaf pages are equally likely to be hit, forcing the whole index into memory. With small indexes that's fine, but once the index size exceeds shared buffers (or RAM), the cache hit ratio quickly deteriorates. The main goal of the two generators implemented by this extension, is generating UUIDS in a more sequential pattern, but without reducing the randomness too much (which could increase the probability of collision and predictability of the generated UUIDs).",
   "version": "1.0.0",
   "maintainer": "Tomas Vondra <tomas@pgaddict.com>",
   "license": "bsd",
   "prereqs": {
      "runtime": {
         "requires": {
            "PostgreSQL": "10.0.0"
         }
      }
   },
   "provides": {
     "pg_uuid": {
       "file": "pg_uuid--1.0.0.sql",
       "docfile" : "README.md",
       "version": "1.0.0"
     }
   },
   "resources": {
      "repository": {
        "url":  "https://github.com/tvondra/pg_uuid.git",
        "web":  "http://github.com/tvondra/pg_uuid",
        "type": "git"
      }
   },
   "tags" : ["UUID", "generator"],
   "meta-spec": {
      "version": "1.0.0",
      "url": "http://pgxn.org/meta/spec.txt"
   },
   "release_status" : "stable"
}
